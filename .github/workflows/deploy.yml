name: Deploy to EC2

on:
  push:
    branches:
      - main
env:
  IMAGE_NAME: openai-discord-bot
  INSTANCE_IP: 13.48.30.232
  INSTANCE_USERNAME: ubuntu

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get AWS registry token
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: eu-north-1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - run: |
          TOKEN=$(aws ecr-public get-authorization-token --registry-id public --output text --query 'authorizationData[].authorizationToken')
          echo "::add-secret::AWS_REGISTRY_TOKEN=$TOKEN"

      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          registry: public.ecr.aws
          username: AWS
          password: ${{ secrets.AWS_REGISTRY_TOKEN }}

      - name: Build and push Docker image
        id: build-image
        env:
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
        run: |
          docker build -t public.ecr.aws/dilldall/$IMAGE_NAME .
          docker push public.ecr.aws/dilldall/$IMAGE_NAME

      - name: Deploy Docker image to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.INSTANCE_IP }}
          username: ${{ env.INSTANCE_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker stop openai-discord-bot || true
            docker rm openai-discord-bot || true
            docker pull public.ecr.aws/dilldall/$IMAGE_NAME
            docker run -d --name discord-openai-bot public.ecr.aws/dilldall/$IMAGE_NAME
